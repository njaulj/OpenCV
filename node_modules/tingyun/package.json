{
  "_args": [
    [
      "tingyun-agent-nodejs-1.1.3.tar.gz",
      "/Users/liujun/gitclone/OpenCV"
    ]
  ],
  "_from": "tingyun-agent-nodejs-1.1.3.tar.gz",
  "_id": "tingyun@1.1.3",
  "_inCache": true,
  "_location": "/tingyun",
  "_phantomChildren": {},
  "_requested": {
    "name": null,
    "raw": "tingyun-agent-nodejs-1.1.3.tar.gz",
    "rawSpec": "tingyun-agent-nodejs-1.1.3.tar.gz",
    "scope": null,
    "spec": "/Users/liujun/gitclone/OpenCV/tingyun-agent-nodejs-1.1.3.tar.gz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:tingyun-agent-nodejs-1.1.3.tar.gz",
  "_shasum": "eafd800303b4340b3cbf5c273fccf37f611e3bad",
  "_shrinkwrap": null,
  "_spec": "tingyun-agent-nodejs-1.1.3.tar.gz",
  "_where": "/Users/liujun/gitclone/OpenCV",
  "author": {
    "email": "support@networkbench.com",
    "name": "Tingyun Node.js agent team"
  },
  "bundleDependencies": [
    "async-listener",
    "emitter-listener"
  ],
  "contributors": [
    {
      "name": "fengliqiang",
      "email": "fenglq@networkbench.com",
      "url": "http://networkbench.com"
    }
  ],
  "dependencies": {
    "async-listener": "^0.5.0",
    "emitter-listener": "^1.0.1"
  },
  "description": "tingyun agent",
  "devDependencies": {},
  "directories": {},
  "engines": {
    "node": ">=0.8.0"
  },
  "homepage": "http://networkbench.com",
  "installable": true,
  "keywords": [
    "apm",
    "debugging",
    "instrumentation",
    "monitoring",
    "performance",
    "profiling"
  ],
  "licenses": [
    {
      "type": "proprietary",
      "url": "https://"
    }
  ],
  "name": "tingyun",
  "optionalDependencies": {},
  "readme": "1,安装：\n-------------------------------------------------\n\t\t进入应用根目录并执行安装\n\t\tcd <app root dir> \n\t\tnpm install http://download.tingyun.com/agent/nodejs/latest/tingyun-agent-nodejs-latest.tar.gz \n\n2,配置：\n-------------------------------------------------\n### 1)、执行配置命令，填写应用名和授权序号\n\t\tnode node_modules/tingyun/setup.js \n### 2)、修改应用的主文件,将 require('tingyun') 添加到文件首行。\n\t\t如果您的package.json中没有设置main参数，并且应用根路径下没有index.js文件，那么需要手动将\"require('tingyun')\" 添加到主文件的首行。 \n\t\t配置完成之后会在应用目录下生成 tingyun.json文件.\n3,配置项含义：\n-------------------------------------------------\n\n###3.1启用/禁用性能信息采集\n\t\t配置选项格式:\n\t\t   \"enabled\" : true\n\t\t   type    : boolean\n\t\t   value   : true/false\n\t\t   default : true\n\t\t说明\n\t\t  允许或者禁止NodeJS探针采集数据。本选项设置为false时，NodeJS探针将不再采集性能数据。只有当本选项设置为true时，才会有性能数据被采集。\n###3.2授权序号\n\t\t配置选项格式:\n\t\t   \"licenseKey\" : \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", \n\t\t   type    : string\n\t\t   value   : 字符串\n\t\t   default : 无\n\t\t说明\n\t\t  本条配置项是您在安装时输入的授权序号。\n###3.3应用名\n\t\t配置选项格式:\n\t\t   \"app_name\" : [\"Node\"], \n\t\t   type    : string\n\t\t   value   : 字符串\n\t\t   default : 无\n\t\t说明\n\t\t  应用识别名称\n###3.4日志管理\n\t\tNodeJS探针有两个模块:守护进程和NodeJS扩展。每个模块都有单独的日志管理\n###  3.4.1日志文件路径 \n\t\t配置选项格式:\n\t\t   agent_log_file_name : \"/var/log/networkbench/tingyun_agent.log\", \n\t\t   type    : string\n\t\t   value   : 字符串\n\t\t   default : <app root>/tingyun_agent.log\n\t\t说明:\n\t\t  指定NodeJS的日志文件路径。\n###  3.4.2日志级别 \n\t\t配置选项格式:\n\t\t   agent_log_level : \"info\", \n\t\t   type            : string\n\t\t   value           : debug\" > \"verbose\" > \"info\" > \"warning\" > \"error\" > \"critical\"\n\t\t   default         : \"info\"\n\t\t说明:\n\t\t  本选项是控制日志数据写入日志文件的级别。\"debug\"是最低级，允许所有日志信息写入日志文件。\"critical\"是最高级,仅有critical级别日志允许写入\n###3.5审计模式\n\t\t配置选项格式:\n\t\t   \"audit_mode\" : false\n\t\t   type         : boolean\n\t\t   value        : true/false\n\t\t   default      : false\n\t\t说明:\n\t\t  本选项设定是否在日志文件中写入更详尽的信息，包括所有的向听云后台上传和下载的数据。\n###3.6数据发送连接选项\n###  3.6.1是否启用http安全连接 \n\t\t配置选项格式:\n\t\t   \"ssl\"   : true\n\t\t   type    : boolean\n\t\t   value   : true/false\n\t\t   default : true\n\t\t说明:\n\t\t  本选项指定向服务器发送数据是否弃用 安全连接(https)。若设定为true，则向服务器发送数据时期用https方式。否则，使用普通http方式。\n###  3.6.2代理服务器地址 \n\t\t配置选项格式:\n\t\t   \"proxy_host\" : '' \n\t\t   type         : string\n\t\t   value        : http代理服务器地址\n\t\t   default      : ''\n\t\t说明:\n\t\t  本选项指定代理服务器的地址。若选项不为空，并且未启用安全连接，则本选项值为http代理服务器的ip地址。\n###  3.6.3代理服务器端口 \n\t\t配置选项格式:\n\t\t   \"proxy_port\" : ''\n\t\t   type         : digit\n\t\t   value        : \n\t\t   default      : 无\n\t\t说明:\n\t\t  同前，本选项指定代理服务器的端口。\n###  3.6.4代理服务器user \n\t\t配置选项格式:\n\t\t   \"proxy_user\" : ''\n\t\t   type         : string\n\t\t   value        : \n\t\t   default      : 无\n\t\t说明:\n\t\t  同前，若代理服务器需要用户名密码，本选项指定代理服务器的登陆名。\n###  3.6.5代理服务器password \n\t\t配置选项格式:\n\t\t   \"proxy_password\" : ''\n\t\t   type             : string\n\t\t   value            : \n\t\t   default          : 无\n\t\t说明:\n\t\t  同前，若代理服务器需要用户名密码，本选项指定代理服务器的登陆密码。\n\n",
  "readmeFilename": "README.md",
  "version": "1.1.3"
}
